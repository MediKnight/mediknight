/*
 * @(#)$Id$
 *
 * (C)2000-2001 Baltic Online Computer GmbH
 */
package de.bo.mediknight;

import java.util.*;
import de.bo.mediknight.domain.*;
import de.bo.mediknight.util.*;
import java.sql.SQLException;

/**
 *
 */
public class PatientHistory {

    /**
     * Maximal size of the recent list (currently 10)
     */
    public final static int MAXSIZE = 10;

    private final static String KEY = "patient.history";

    /**
     * The Container
     */
    private List<Patient> recents;

    /**
     * here we save an instance of this class which will be generated by
     * method <code>getInstance()</code> and returned by this method if it
     * already exists
     *
     * @see getInstance()
     */
    private static PatientHistory instance;

    /**
     * the current user who is logged in
     */
    private static User user;

    static {
        user = MainFrame.getApplication().getUser();
        instance = new PatientHistory();
    }

    private PatientHistory() {
        recents = new ArrayList<Patient>();
    }

    /**
     * This method returns the only instance of this class
     */
    public static PatientHistory getInstance() {
        return instance;
    }

    /**
     * Retrieves history from Database
     */
    public List<Patient> load() throws SQLException {
        recents.clear();
        Map<String, String> info = user.retrieveInformation();
        String s = info.get(KEY);
        int[] ids = MediknightUtilities.readCSV((s!=null) ? s : "");
        for ( int i=0; i<ids.length && i<MAXSIZE; i++ ) {
            try {
                Patient p = Patient.retrieve(ids[i]);
                if ( p != null )
                    recents.add(p);
            }
            catch ( NumberFormatException x ) { // shoul not happen
                x.printStackTrace();
            }
        }
        return recents;
    }

    /**
     * @return list of recent patients
     */
    public List<Patient> getList() {
        return recents;
    }

    public void setList(List<Patient> newList) throws SQLException {
        recents = newList;
        save();
    }

    /**
     * Saves history and removes currently deleted patients from
     * history list.
     */
    public void save() throws SQLException {
        // Removes currently deleted patients from list first.
        for ( Iterator<Patient> it=recents.iterator(); it.hasNext(); ) {
            Patient p = it.next();
            int id = p.getId();
            if ( Patient.retrieve(id) == null ) {
                it.remove();
            }
        }

        int[] ids = new int[recents.size()];
        for ( int i=0; i<ids.length; i++ ) {
            Patient p = recents.get(i);
            ids[i] = p.getId();
        }

        Map<String, String> map = new Hashtable<String, String>();
        map.put(KEY,MediknightUtilities.writeCSV(ids));
        user.saveInformation(map);
    }

    /**
     * Adds a patient to history.
     * <p><ul>
     * <li>A patient will allways be placed on the first position.
     * <li>A patient will be not added twice.
     * <li>The list will be truncated if the entries exeeds 10
     * </ul>
     */
    public void add(Patient p) throws SQLException {
        int index = recents.indexOf(p);
        if ( index != 0 ) {
            if ( index > 0 ) {
                recents.remove(index);
            }
            recents.add(0,p);
            if ( recents.size() > MAXSIZE ) {
                recents.remove(MAXSIZE);
            }
        }
        save();
    }
}
